/* eslint-disable @typescript-eslint/naming-convention */

import type { Config } from './types';

export const config: Config = {
  files: {
    database: {
      angularPath: 'data/Angular.html',
      dataStructuresAndAlgorithmsPath: 'data/DataStructuresAndAlgorithms.html',
      experiencePath: 'data/Experience.html',
      javaScriptPath: 'data/JavaScript.html',
      nativePlatformsAndroidPath: 'data/NativePlatforms-Android.html',
      nativePlatformsIosPath: 'data/NativePlatforms-iOS.html',
      nodePath: 'data/Node.html',
      reactAdvancedPath: 'data/React-Advanced.html',
      reactApolloPath: 'data/React-Apollo.html',
      reactBasicsPath: 'data/React-Basics.html',
      reactHooksPath: 'data/React-Hooks.html',
      reactReduxPath: 'data/React-Redux.html',
      reactNativePath: 'data/ReactNative.html',
      softwareSkillsPath: 'data/SoftwareSkills.html',
      testingPathDetox: 'data/Testing-Detox.html',
      testingPathJest: 'data/Testing-Jest.html',
      testTasksPath: 'data/TestTasks.html',
      typeScriptPath: 'data/TypeScript.html',
      vuePath: 'data/Vue.html',
    },
    interview: {
      notValidQuestionsFilename: 'notValidQuestions.txt',
      inputFilename: 'input.json',
      questionsFilename: 'questions.txt',
      forInterviewerFilename: 'forInterviewer.pdf',
    },
    result: {
      resultDraftFilename: 'resultDraft.txt',
      resultNotesDraftFilename: 'resultNotesDraft.txt',
      radarChartFilename: 'radarChart.png',
      resultFilename: 'result.pdf',
    },
    suitableQuestionMarker: '+ ',
  },
  radarChart: {
    width: 700,
    datasetColor: 'rgb(0, 54, 167)',
    datasetBackgroundColor: 'rgba(0, 54, 167, 0.3)',
    fontSize: 10,
    fontColor: 'rgb(74,78,77)',
    fontStyle: 'bold',
    legendFontSize: 14,
    gridColor: 'rgb(187, 187, 187)',
    ticksBackgroundColor: 'rgba(255, 255, 255, 0.1)',
  },
  pdfDocument: {
    // paper
    creator: 'Dmitry Usik',
    author: 'Dmitry Usik',
    sizes: {
      verticalMargin: 48,
      horizontalMargin: 48,
      radarChartWidth: 480,
      iconWidth: 20,
      lineMargin: 8,
      logoWidth: 80,
      logoMargin: 48,
    },
    colors: {
      brandColor: [0, 54, 176],
      blackColor: [15, 15, 15],
    },
    fonts: {
      regularFont: 'EBGaramond-Regular',
      regularFontPath: 'assets/fonts/EBGaramond-Regular.ttf',
      boldFont: 'EBGaramond-SemiBold',
      boldFontPath: 'assets/fonts/EBGaramond-SemiBold.ttf',
      smallerFontSize: 12,
      baseFontSize: 14,
      biggerFontSize: 18,
      biggestFontSize: 32,
    },
    icons: {
      angular: 'assets/images/angular.png',
      department: 'assets/images/department.png',
      email: 'assets/images/email.png',
      linkedin: 'assets/images/linkedin.png',
      node: 'assets/images/node.png',
      partnership: 'assets/images/partnership.png',
      react: 'assets/images/react.png',
      reactNative: 'assets/images/reactNative.png',
      riseappsLogo: 'assets/images/riseappsLogo.png',
      user: 'assets/images/user.png',
      vue: 'assets/images/vue.png',
    },
  },
  parsers: {
    topicKey: '@topic@',
    questionKey: '@questionKey@',
    englishLevelKey: '@englishLevel@',
    softwareSkillsKey: '@softwareSkills@',
    technicalSkillsKey: '@technicalSkills@',
    supposedLevelKey: '@supposedLevel@',
    recommendKey: '@recommend@',
  },
  evaluation: {
    maxMark: 5,
    scale: {
      1: "Doesn't have theoretical and practical skills in this area.",
      2: 'Has superficial theoretical or practical skills in this area.',
      3: 'Has enough practice and superficial theoretical skills in this area.',
      4: 'Has good theoretical and practice skills in this area.',
      5: 'Has excellent theoretical and practice skills in this area.',
    },
  },
};
